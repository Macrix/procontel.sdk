//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelegramDefinitions.Telegrams {
    using System;
    using System.Text;
    
    
    /// <summary>
    /// 
    /// </summary>
    [System.Xml.Serialization.XmlRoot("Telegram")]
    [System.Serializable()]
    public partial class Telegram_A {
        
        private static string _headerXsbtDefinition = "<?xml version='1.0' encoding='utf-16'?><Telegram name='HeaderType' ID='' bytes='6' IsHeaderType='True' ContainsHeaderType='True'><element name='MessageLength' type='Short' length='2' offset='0' HeaderHint='Length' comment='header plus data' /><element name='MessageId' type='Short' length='2' offset='2' HeaderHint='ID' comment='Message Id' /><element name='MessageCount' type='Short' length='2' offset='4' HeaderHint='MessageCounter' comment='Message counter &#xA;[0..65535] - wrap around' /></Telegram>";
        
        private static string _telegramXsbtDefinition = "<?xml version='1.0' encoding='utf-16'?><Telegram name='Telegram_A' ID='25' bytes='383' ContainsHeaderType='True'><element name='HEAD' type='HeaderType' length='6' offset='0' count='1' comment='Header'><element name='MessageLength' type='Short' length='2' offset='0' count='1' comment='header plus data' /><element name='MessageId' type='Short' length='2' offset='2' count='1' comment='Message Id' /><element name='MessageCount' type='Short' length='2' offset='4' count='1' comment='Message counter &#xA;[0..65535] - wrap around' /></element><element name='RawBinary' type='Base64Binary' length='2' offset='6' count='1' comment='[#]' /><element name='ByteValue' type='unsignedByte' length='1' offset='8' count='1' comment='[#]' /><element name='Int_1Byte' type='unsignedByte' length='1' offset='9' count='1' comment='[#]' /><element name='Int_2Byte' type='Short' length='2' offset='10' count='1' comment='[#]' /><element name='Int_4Byte' type='int' length='4' offset='12' count='1' comment='[#]' /><element name='Int_8Byte' type='long' length='8' offset='16' count='1' comment='[#]' /><element name='Integer_1Byte' type='unsignedByte' length='1' offset='24' count='1' comment='[#]' /><element name='Integer_2Byte' type='Short' length='2' offset='25' count='1' comment='[#]' /><element name='Integer_4Byte' type='int' length='4' offset='27' count='1' comment='[#]' /><element name='Integer_8Byte' type='long' length='8' offset='31' count='1' comment='[#]' /><element name='Dint_1Byte' type='unsignedByte' length='1' offset='39' count='1' comment='[#]' /><element name='Dint_2Byte' type='Short' length='2' offset='40' count='1' comment='[#]' /><element name='Dint_4Byte' type='int' length='4' offset='42' count='1' comment='[#]' /><element name='Dint_8Byte' type='long' length='8' offset='46' count='1' comment='[#]' /><element name='Short_1Byte' type='unsignedByte' length='1' offset='54' count='1' comment='[#]' /><element name='Short_2Byte' type='Short' length='2' offset='55' count='1' comment='[#]' /><element name='Short_4Byte' type='int' length='4' offset='57' count='1' comment='[#]' /><element name='Short_8Byte' type='long' length='8' offset='61' count='1' comment='[#]' /><element name='Long_1Byte' type='unsignedByte' length='1' offset='69' count='1' comment='[#]' /><element name='Long_2Byte' type='Short' length='2' offset='70' count='1' comment='[#]' /><element name='Long_4Byte' type='int' length='4' offset='72' count='1' comment='[#]' /><element name='Long_8Byte' type='long' length='8' offset='76' count='1' comment='[#]' /><element name='Uint_1Byte' type='unsignedByte' length='1' offset='84' count='1' comment='[#]' /><element name='Uint_2Byte' type='uShort' length='2' offset='85' count='1' comment='[#]' /><element name='Uint_4Byte' type='uint' length='4' offset='87' count='1' comment='[#]' /><element name='Uint_8Byte' type='ulong' length='8' offset='91' count='1' comment='[#]' /><element name='Ulong_1Byte' type='unsignedByte' length='1' offset='99' count='1' comment='[#]' /><element name='Ulong_2Byte' type='uShort' length='2' offset='100' count='1' comment='[#]' /><element name='Ulong_4Byte' type='uint' length='4' offset='102' count='1' comment='[#]' /><element name='Ulong_8Byte' type='ulong' length='8' offset='106' count='1' comment='[#]' /><element name='UShort_1Byte' type='unsignedByte' length='1' offset='114' count='1' comment='[#]' /><element name='UShort_2Byte' type='uShort' length='2' offset='115' count='1' comment='[#]' /><element name='UShort_4Byte' type='uint' length='4' offset='117' count='1' comment='[#]' /><element name='UShort_8Byte' type='ulong' length='8' offset='121' count='1' comment='[#]' /><element name='Float_4Byte' type='float' length='4' offset='129' count='1' comment='[#]' /><element name='Float_8Byte' type='double' length='8' offset='133' count='1' comment='[#]' /><element name='Real_4Byte' type='float' length='4' offset='141' count='1' comment='[#]' /><element name='Real_8Byte' type='double' length='8' offset='145' count='1' comment='[#]' /><element name='Number_4Byte' type='float' length='4' offset='153' count='1' comment='[#]' /><element name='Number_8Byte' type='double' length='8' offset='157' count='1' comment='[#]' /><element name='Time_stampField' type='time_stamp' length='32' offset='165' count='1' comment='[#]' /><element name='DateTimeField' type='datetime' length='32' offset='197' count='1' comment='[#]' /><element name='DateField' type='date' length='32' offset='229' count='1' comment='[#]' /><element name='StringField' type='string' length='20' offset='261' count='1' comment='[#]' /><element name='PrismoStringField' type='PrimoString' length='20' offset='281' count='1' comment='[#]' /><element name='PcsstringField' type='pcsstring' length='20' offset='301' count='1' comment='[#]' /><element name='OpcstringField' type='opcstring' length='18' offset='321' count='1' comment='[#]' /><element name='WordField' type='Word' length='20' offset='341' count='1' comment='[#]' /><element name='S7charField' type='s7char' length='18' offset='361' count='1' comment='[#]' /><element name='MyChar' type='char' length='1' offset='381' count='1' comment='[#]' /><element name='FlagField' type='flag' length='1' offset='382' count='1' comment='[#]' /></Telegram>";
        
        private HeaderType _hEAD = new HeaderType();
        
        private byte[] _rawBinary = new System.Byte[2];
        
        private System.Byte? _byteValue;
        
        private System.Byte? _int_1Byte;
        
        private System.Int16? _int_2Byte;
        
        private System.Int32? _int_4Byte;
        
        private System.Int64? _int_8Byte;
        
        private System.Byte? _integer_1Byte;
        
        private System.Int16? _integer_2Byte;
        
        private System.Int32? _integer_4Byte;
        
        private System.Int64? _integer_8Byte;
        
        private System.Byte? _dint_1Byte;
        
        private System.Int16? _dint_2Byte;
        
        private System.Int32? _dint_4Byte;
        
        private System.Int64? _dint_8Byte;
        
        private System.Byte? _short_1Byte;
        
        private System.Int16? _short_2Byte;
        
        private System.Int32? _short_4Byte;
        
        private System.Int64? _short_8Byte;
        
        private System.Byte? _long_1Byte;
        
        private System.Int16? _long_2Byte;
        
        private System.Int32? _long_4Byte;
        
        private System.Int64? _long_8Byte;
        
        private System.Byte? _uint_1Byte;
        
        private System.UInt16? _uint_2Byte;
        
        private System.UInt32? _uint_4Byte;
        
        private System.UInt64? _uint_8Byte;
        
        private System.Byte? _ulong_1Byte;
        
        private System.UInt16? _ulong_2Byte;
        
        private System.UInt32? _ulong_4Byte;
        
        private System.UInt64? _ulong_8Byte;
        
        private System.Byte? _uShort_1Byte;
        
        private System.UInt16? _uShort_2Byte;
        
        private System.UInt32? _uShort_4Byte;
        
        private System.UInt64? _uShort_8Byte;
        
        private System.Single? _float_4Byte;
        
        private System.Double? _float_8Byte;
        
        private System.Single? _real_4Byte;
        
        private System.Double? _real_8Byte;
        
        private System.Single? _number_4Byte;
        
        private System.Double? _number_8Byte;
        
        private System.DateTime? _time_stampField = new System.DateTime?();
        
        private System.DateTime? _dateTimeField = new System.DateTime?();
        
        private System.DateTime? _dateField = new System.DateTime?();
        
        private string _stringField = "";
        
        private const int @__StringFieldMaxLen_GnV9wpZa = 20;
        
        private string _prismoStringField = "";
        
        private const int @__PrismoStringFieldMaxLen_GnV9wpZa = 20;
        
        private string _pcsstringField = "";
        
        private const int @__PcsstringFieldMaxLen_GnV9wpZa = 20;
        
        private string _opcstringField = "";
        
        private const int @__OpcstringFieldMaxLen_GnV9wpZa = 18;
        
        private string _wordField = "";
        
        private const int @__WordFieldMaxLen_GnV9wpZa = 20;
        
        private string _s7charField = "";
        
        private const int @__S7charFieldMaxLen_GnV9wpZa = 18;
        
        private string _myChar = "";
        
        private const int @__MyCharMaxLen_GnV9wpZa = 1;
        
        private System.Boolean? _flagField;
        
        private static string _name = "Telegram_A";
        
        private static string _iD = "25";
        
        /// <summary>
        /// Defines the fullname of telegram including namespace.
        /// </summary>
        public const string TelegramFullname = "TelegramDefinitions.Telegrams.Telegram_A";
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Telegram_A"/> class.
        /// </summary>
        public Telegram_A() : 
                this(true) {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Telegram_A"/> class.
        /// </summary>
        /// <param name="initWithDefaultValues">Determines whether the telegram should be initialized with default values.</param>
        public Telegram_A(bool initWithDefaultValues) {
            this.HEAD = new HeaderType();
            this.HEAD.MessageId = 25;
            this.HEAD.MessageLength = 383;
            if (initWithDefaultValues) {
                ByteValue = 0;
                Int_1Byte = 0;
                Int_2Byte = 0;
                Int_4Byte = 0;
                Int_8Byte = 0;
                Integer_1Byte = 0;
                Integer_2Byte = 0;
                Integer_4Byte = 0;
                Integer_8Byte = 0;
                Dint_1Byte = 0;
                Dint_2Byte = 0;
                Dint_4Byte = 0;
                Dint_8Byte = 0;
                Short_1Byte = 0;
                Short_2Byte = 0;
                Short_4Byte = 0;
                Short_8Byte = 0;
                Long_1Byte = 0;
                Long_2Byte = 0;
                Long_4Byte = 0;
                Long_8Byte = 0;
                Uint_1Byte = 0;
                Uint_2Byte = 0;
                Uint_4Byte = 0;
                Uint_8Byte = 0;
                Ulong_1Byte = 0;
                Ulong_2Byte = 0;
                Ulong_4Byte = 0;
                Ulong_8Byte = 0;
                UShort_1Byte = 0;
                UShort_2Byte = 0;
                UShort_4Byte = 0;
                UShort_8Byte = 0;
                Float_4Byte = 0;
                Float_8Byte = 0;
                Real_4Byte = 0;
                Real_8Byte = 0;
                Number_4Byte = 0;
                Number_8Byte = 0;
                Time_stampField = new System.DateTime(1, 1, 1, 0, 0, 0, 0);
                DateTimeField = new System.DateTime(1, 1, 1, 0, 0, 0, 0);
                DateField = new System.DateTime(1, 1, 1, 0, 0, 0, 0);
                StringField = "";
                PrismoStringField = "";
                PcsstringField = "";
                OpcstringField = "";
                WordField = "";
                S7charField = "";
                MyChar = "";
                FlagField = false;
            }
        }
        
        public static string HeaderXsbtDefinition {
            get {
                return Telegram_A._headerXsbtDefinition;
            }
        }
        
        public static string TelegramXsbtDefinition {
            get {
                return Telegram_A._telegramXsbtDefinition;
            }
        }
        
        /// <summary>
        /// Gets or sets the Header.
        /// </summary>
        /// <value>The HEAD.</value>
        [System.Xml.Serialization.XmlElement("HEAD", IsNullable=true)]
        public HeaderType HEAD {
            get {
                return this._hEAD;
            }
            set {
                this._hEAD = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the RawBinary. Unit: #.
        /// </summary>
        /// <value>The RawBinary.</value>
        [System.Xml.Serialization.XmlElement("RawBinary", IsNullable=true)]
        public byte[] RawBinary {
            get {
                return this._rawBinary;
            }
            set {
                if (value != null && value.Length > 2) {
throw new System.ArgumentOutOfRangeException();
                }
                this._rawBinary = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the RawBinary.
        /// In order to retrieve or save string value in RawBinary field the UTF8 encoding is used.
        /// </summary>
        [System.Xml.Serialization.XmlIgnore()]
        public string RawBinaryAsString {
            get {
                if (RawBinary != null && RawBinary.Length > 0) {
                    return Encoding.UTF8.GetString(RawBinary);
                }
                else {
                    return null;
                }
            }
            set {
                if (!String.IsNullOrEmpty(value)) {
                    RawBinary = Encoding.UTF8.GetBytes(value);
                }
                else {
                    RawBinary = new byte[0];
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the ByteValue. Unit: #.
        /// </summary>
        /// <value>The ByteValue.</value>
        [System.Xml.Serialization.XmlElement("ByteValue", IsNullable=true)]
        public System.Byte? ByteValue {
            get {
                return this._byteValue;
            }
            set {
                this._byteValue = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Int_1Byte. Unit: #.
        /// </summary>
        /// <value>The Int_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Int_1Byte", IsNullable=true)]
        public System.Byte? Int_1Byte {
            get {
                return this._int_1Byte;
            }
            set {
                this._int_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Int_2Byte. Unit: #.
        /// </summary>
        /// <value>The Int_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Int_2Byte", IsNullable=true)]
        public System.Int16? Int_2Byte {
            get {
                return this._int_2Byte;
            }
            set {
                this._int_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Int_4Byte. Unit: #.
        /// </summary>
        /// <value>The Int_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Int_4Byte", IsNullable=true)]
        public System.Int32? Int_4Byte {
            get {
                return this._int_4Byte;
            }
            set {
                this._int_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Int_8Byte. Unit: #.
        /// </summary>
        /// <value>The Int_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Int_8Byte", IsNullable=true)]
        public System.Int64? Int_8Byte {
            get {
                return this._int_8Byte;
            }
            set {
                this._int_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Integer_1Byte. Unit: #.
        /// </summary>
        /// <value>The Integer_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Integer_1Byte", IsNullable=true)]
        public System.Byte? Integer_1Byte {
            get {
                return this._integer_1Byte;
            }
            set {
                this._integer_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Integer_2Byte. Unit: #.
        /// </summary>
        /// <value>The Integer_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Integer_2Byte", IsNullable=true)]
        public System.Int16? Integer_2Byte {
            get {
                return this._integer_2Byte;
            }
            set {
                this._integer_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Integer_4Byte. Unit: #.
        /// </summary>
        /// <value>The Integer_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Integer_4Byte", IsNullable=true)]
        public System.Int32? Integer_4Byte {
            get {
                return this._integer_4Byte;
            }
            set {
                this._integer_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Integer_8Byte. Unit: #.
        /// </summary>
        /// <value>The Integer_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Integer_8Byte", IsNullable=true)]
        public System.Int64? Integer_8Byte {
            get {
                return this._integer_8Byte;
            }
            set {
                this._integer_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Dint_1Byte. Unit: #.
        /// </summary>
        /// <value>The Dint_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Dint_1Byte", IsNullable=true)]
        public System.Byte? Dint_1Byte {
            get {
                return this._dint_1Byte;
            }
            set {
                this._dint_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Dint_2Byte. Unit: #.
        /// </summary>
        /// <value>The Dint_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Dint_2Byte", IsNullable=true)]
        public System.Int16? Dint_2Byte {
            get {
                return this._dint_2Byte;
            }
            set {
                this._dint_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Dint_4Byte. Unit: #.
        /// </summary>
        /// <value>The Dint_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Dint_4Byte", IsNullable=true)]
        public System.Int32? Dint_4Byte {
            get {
                return this._dint_4Byte;
            }
            set {
                this._dint_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Dint_8Byte. Unit: #.
        /// </summary>
        /// <value>The Dint_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Dint_8Byte", IsNullable=true)]
        public System.Int64? Dint_8Byte {
            get {
                return this._dint_8Byte;
            }
            set {
                this._dint_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Short_1Byte. Unit: #.
        /// </summary>
        /// <value>The Short_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Short_1Byte", IsNullable=true)]
        public System.Byte? Short_1Byte {
            get {
                return this._short_1Byte;
            }
            set {
                this._short_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Short_2Byte. Unit: #.
        /// </summary>
        /// <value>The Short_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Short_2Byte", IsNullable=true)]
        public System.Int16? Short_2Byte {
            get {
                return this._short_2Byte;
            }
            set {
                this._short_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Short_4Byte. Unit: #.
        /// </summary>
        /// <value>The Short_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Short_4Byte", IsNullable=true)]
        public System.Int32? Short_4Byte {
            get {
                return this._short_4Byte;
            }
            set {
                this._short_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Short_8Byte. Unit: #.
        /// </summary>
        /// <value>The Short_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Short_8Byte", IsNullable=true)]
        public System.Int64? Short_8Byte {
            get {
                return this._short_8Byte;
            }
            set {
                this._short_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Long_1Byte. Unit: #.
        /// </summary>
        /// <value>The Long_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Long_1Byte", IsNullable=true)]
        public System.Byte? Long_1Byte {
            get {
                return this._long_1Byte;
            }
            set {
                this._long_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Long_2Byte. Unit: #.
        /// </summary>
        /// <value>The Long_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Long_2Byte", IsNullable=true)]
        public System.Int16? Long_2Byte {
            get {
                return this._long_2Byte;
            }
            set {
                this._long_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Long_4Byte. Unit: #.
        /// </summary>
        /// <value>The Long_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Long_4Byte", IsNullable=true)]
        public System.Int32? Long_4Byte {
            get {
                return this._long_4Byte;
            }
            set {
                this._long_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Long_8Byte. Unit: #.
        /// </summary>
        /// <value>The Long_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Long_8Byte", IsNullable=true)]
        public System.Int64? Long_8Byte {
            get {
                return this._long_8Byte;
            }
            set {
                this._long_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Uint_1Byte. Unit: #.
        /// </summary>
        /// <value>The Uint_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Uint_1Byte", IsNullable=true)]
        public System.Byte? Uint_1Byte {
            get {
                return this._uint_1Byte;
            }
            set {
                this._uint_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Uint_2Byte. Unit: #.
        /// </summary>
        /// <value>The Uint_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Uint_2Byte", IsNullable=true)]
        public System.UInt16? Uint_2Byte {
            get {
                return this._uint_2Byte;
            }
            set {
                this._uint_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Uint_4Byte. Unit: #.
        /// </summary>
        /// <value>The Uint_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Uint_4Byte", IsNullable=true)]
        public System.UInt32? Uint_4Byte {
            get {
                return this._uint_4Byte;
            }
            set {
                this._uint_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Uint_8Byte. Unit: #.
        /// </summary>
        /// <value>The Uint_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Uint_8Byte", IsNullable=true)]
        public System.UInt64? Uint_8Byte {
            get {
                return this._uint_8Byte;
            }
            set {
                this._uint_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Ulong_1Byte. Unit: #.
        /// </summary>
        /// <value>The Ulong_1Byte.</value>
        [System.Xml.Serialization.XmlElement("Ulong_1Byte", IsNullable=true)]
        public System.Byte? Ulong_1Byte {
            get {
                return this._ulong_1Byte;
            }
            set {
                this._ulong_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Ulong_2Byte. Unit: #.
        /// </summary>
        /// <value>The Ulong_2Byte.</value>
        [System.Xml.Serialization.XmlElement("Ulong_2Byte", IsNullable=true)]
        public System.UInt16? Ulong_2Byte {
            get {
                return this._ulong_2Byte;
            }
            set {
                this._ulong_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Ulong_4Byte. Unit: #.
        /// </summary>
        /// <value>The Ulong_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Ulong_4Byte", IsNullable=true)]
        public System.UInt32? Ulong_4Byte {
            get {
                return this._ulong_4Byte;
            }
            set {
                this._ulong_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Ulong_8Byte. Unit: #.
        /// </summary>
        /// <value>The Ulong_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Ulong_8Byte", IsNullable=true)]
        public System.UInt64? Ulong_8Byte {
            get {
                return this._ulong_8Byte;
            }
            set {
                this._ulong_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the UShort_1Byte. Unit: #.
        /// </summary>
        /// <value>The UShort_1Byte.</value>
        [System.Xml.Serialization.XmlElement("UShort_1Byte", IsNullable=true)]
        public System.Byte? UShort_1Byte {
            get {
                return this._uShort_1Byte;
            }
            set {
                this._uShort_1Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the UShort_2Byte. Unit: #.
        /// </summary>
        /// <value>The UShort_2Byte.</value>
        [System.Xml.Serialization.XmlElement("UShort_2Byte", IsNullable=true)]
        public System.UInt16? UShort_2Byte {
            get {
                return this._uShort_2Byte;
            }
            set {
                this._uShort_2Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the UShort_4Byte. Unit: #.
        /// </summary>
        /// <value>The UShort_4Byte.</value>
        [System.Xml.Serialization.XmlElement("UShort_4Byte", IsNullable=true)]
        public System.UInt32? UShort_4Byte {
            get {
                return this._uShort_4Byte;
            }
            set {
                this._uShort_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the UShort_8Byte. Unit: #.
        /// </summary>
        /// <value>The UShort_8Byte.</value>
        [System.Xml.Serialization.XmlElement("UShort_8Byte", IsNullable=true)]
        public System.UInt64? UShort_8Byte {
            get {
                return this._uShort_8Byte;
            }
            set {
                this._uShort_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Float_4Byte. Unit: #.
        /// </summary>
        /// <value>The Float_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Float_4Byte", IsNullable=true)]
        public System.Single? Float_4Byte {
            get {
                return this._float_4Byte;
            }
            set {
                this._float_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Float_8Byte. Unit: #.
        /// </summary>
        /// <value>The Float_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Float_8Byte", IsNullable=true)]
        public System.Double? Float_8Byte {
            get {
                return this._float_8Byte;
            }
            set {
                this._float_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Real_4Byte. Unit: #.
        /// </summary>
        /// <value>The Real_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Real_4Byte", IsNullable=true)]
        public System.Single? Real_4Byte {
            get {
                return this._real_4Byte;
            }
            set {
                this._real_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Real_8Byte. Unit: #.
        /// </summary>
        /// <value>The Real_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Real_8Byte", IsNullable=true)]
        public System.Double? Real_8Byte {
            get {
                return this._real_8Byte;
            }
            set {
                this._real_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Number_4Byte. Unit: #.
        /// </summary>
        /// <value>The Number_4Byte.</value>
        [System.Xml.Serialization.XmlElement("Number_4Byte", IsNullable=true)]
        public System.Single? Number_4Byte {
            get {
                return this._number_4Byte;
            }
            set {
                this._number_4Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Number_8Byte. Unit: #.
        /// </summary>
        /// <value>The Number_8Byte.</value>
        [System.Xml.Serialization.XmlElement("Number_8Byte", IsNullable=true)]
        public System.Double? Number_8Byte {
            get {
                return this._number_8Byte;
            }
            set {
                this._number_8Byte = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Time_stampField. Unit: #.
        /// </summary>
        /// <value>The Time_stampField.</value>
        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? Time_stampField {
            get {
                return this._time_stampField;
            }
            set {
                this._time_stampField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the Time_stampField. Unit: #.
        /// </summary>
        /// <value>The Time_stampField.</value>
        [System.Xml.Serialization.XmlElement("Time_stampField", IsNullable=true)]
        public string Time_stampFieldAsXmlString {
            get {
                if ((this.Time_stampField.HasValue != true)) {
                    return null;
                }
                return this.Time_stampField.Value.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            set {
                if (!System.String.IsNullOrEmpty(value) && value.Length >= 19) {
                    this.Time_stampField = System.DateTime.ParseExact(value.Substring(0, 19), "yyyy-MM-ddTHH:mm:ss", null);
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the DateTimeField. Unit: #.
        /// </summary>
        /// <value>The DateTimeField.</value>
        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? DateTimeField {
            get {
                return this._dateTimeField;
            }
            set {
                this._dateTimeField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the DateTimeField. Unit: #.
        /// </summary>
        /// <value>The DateTimeField.</value>
        [System.Xml.Serialization.XmlElement("DateTimeField", IsNullable=true)]
        public string DateTimeFieldAsXmlString {
            get {
                if ((this.DateTimeField.HasValue != true)) {
                    return null;
                }
                return this.DateTimeField.Value.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            set {
                if (!System.String.IsNullOrEmpty(value) && value.Length >= 19) {
                    this.DateTimeField = System.DateTime.ParseExact(value.Substring(0, 19), "yyyy-MM-ddTHH:mm:ss", null);
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the DateField. Unit: #.
        /// </summary>
        /// <value>The DateField.</value>
        [System.Xml.Serialization.XmlIgnore()]
        public System.DateTime? DateField {
            get {
                return this._dateField;
            }
            set {
                this._dateField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the DateField. Unit: #.
        /// </summary>
        /// <value>The DateField.</value>
        [System.Xml.Serialization.XmlElement("DateField", IsNullable=true)]
        public string DateFieldAsXmlString {
            get {
                if ((this.DateField.HasValue != true)) {
                    return null;
                }
                return this.DateField.Value.ToString("yyyy-MM-ddTHH:mm:ss");
            }
            set {
                if (!System.String.IsNullOrEmpty(value) && value.Length >= 19) {
                    this.DateField = System.DateTime.ParseExact(value.Substring(0, 19), "yyyy-MM-ddTHH:mm:ss", null);
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the StringField. Unit: #.
        /// </summary>
        /// <value>The StringField.</value>
        [System.Xml.Serialization.XmlElement("StringField", IsNullable=true)]
        public string StringField {
            get {
                return this._stringField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._stringField = "";
                }
                else {
                    this._stringField = value.Substring(0, System.Math.Min(value.Length, @__StringFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the PrismoStringField. Unit: #.
        /// </summary>
        /// <value>The PrismoStringField.</value>
        [System.Xml.Serialization.XmlElement("PrismoStringField", IsNullable=true)]
        public string PrismoStringField {
            get {
                return this._prismoStringField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._prismoStringField = "";
                }
                else {
                    this._prismoStringField = value.Substring(0, System.Math.Min(value.Length, @__PrismoStringFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the PcsstringField. Unit: #.
        /// </summary>
        /// <value>The PcsstringField.</value>
        [System.Xml.Serialization.XmlElement("PcsstringField", IsNullable=true)]
        public string PcsstringField {
            get {
                return this._pcsstringField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._pcsstringField = "";
                }
                else {
                    this._pcsstringField = value.Substring(0, System.Math.Min(value.Length, @__PcsstringFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the OpcstringField. Unit: #.
        /// </summary>
        /// <value>The OpcstringField.</value>
        [System.Xml.Serialization.XmlElement("OpcstringField", IsNullable=true)]
        public string OpcstringField {
            get {
                return this._opcstringField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._opcstringField = "";
                }
                else {
                    this._opcstringField = value.Substring(0, System.Math.Min(value.Length, @__OpcstringFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the WordField. Unit: #.
        /// </summary>
        /// <value>The WordField.</value>
        [System.Xml.Serialization.XmlElement("WordField", IsNullable=true)]
        public string WordField {
            get {
                return this._wordField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._wordField = "";
                }
                else {
                    this._wordField = value.Substring(0, System.Math.Min(value.Length, @__WordFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the S7charField. Unit: #.
        /// </summary>
        /// <value>The S7charField.</value>
        [System.Xml.Serialization.XmlElement("S7charField", IsNullable=true)]
        public string S7charField {
            get {
                return this._s7charField;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._s7charField = "";
                }
                else {
                    this._s7charField = value.Substring(0, System.Math.Min(value.Length, @__S7charFieldMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the MyChar. Unit: #.
        /// </summary>
        /// <value>The MyChar.</value>
        [System.Xml.Serialization.XmlElement("MyChar", IsNullable=true)]
        public string MyChar {
            get {
                return this._myChar;
            }
            set {
                if (string.IsNullOrEmpty(value)) {
                    this._myChar = "";
                }
                else {
                    this._myChar = value.Substring(0, System.Math.Min(value.Length, @__MyCharMaxLen_GnV9wpZa));
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the FlagField. Unit: #.
        /// </summary>
        /// <value>The FlagField.</value>
        [System.Xml.Serialization.XmlElement("FlagField", IsNullable=true)]
        public System.Boolean? FlagField {
            get {
                return this._flagField;
            }
            set {
                this._flagField = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the array of key column values.
        /// </summary>
        /// <value>The arrays of key column values.</value>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public object[] Keys {
            get {
                object[] keys = new object[20];
                return keys;
            }
            set {
                if (((value == null) 
                            || (value.Length < 0))) {
                    throw new System.ArgumentException();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the telegram Name.
        /// </summary>
        /// <value>The Name.</value>
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name {
            get {
                return Telegram_A._name;
            }
            set {
                if (value != null && !value.Equals("Telegram_A")) {
throw new System.ArgumentException();
                }
                Telegram_A._name = value;
            }
        }
        
        /// <summary>
        /// Gets or sets the telegram ID.
        /// </summary>
        /// <value>The ID.</value>
        [System.Xml.Serialization.XmlAttributeAttribute("ID")]
        public string ID {
            get {
                return Telegram_A._iD;
            }
            set {
                if ((value != "25")) {
throw new System.ArgumentException();
                }
                Telegram_A._iD = value;
            }
        }
        
        /// <summary>
        /// Gets the default id of this telegram.
        /// </summary>
        /// <value>The XML table name.</value>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public static string Id {
            get {
                return "25";
            }
        }
        
        /// <summary>
        /// Gets the fullname of telegram including namespace.
        /// </summary>
        /// <value>The fullname of telegram including namespace.</value>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public string Fullname {
            get {
                return TelegramFullname;
            }
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Telegram_A"/> class.
        /// Deserializes specified XML.
        /// </summary>
        /// <param name="xml">The XML.</param>
        /// <returns>Deserialized instance of the <see cref="Telegram_A"/> class.</returns>
        public static Telegram_A Create(string xml) {
            System.Xml.Serialization.XmlSerializer xs = new System.Xml.Serialization.XmlSerializer(typeof(Telegram_A));
            return (Telegram_A)xs.Deserialize(new System.IO.StringReader(xml));
        }
        
        /// <summary>
        /// Serializes this instance of the <see cref="Telegram_A"/> class and returns this xml as string.
        /// </summary>
        /// <returns>Serialized instance of this <see cref="Telegram_A"/> class.</returns>
        public string GetXml() {
            System.IO.StringWriter wr = new System.IO.StringWriter();
            new System.Xml.Serialization.XmlSerializer(typeof(Telegram_A)).Serialize(wr, this);
            return wr.ToString();
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Telegram_A"/> class.
        /// Deserializes specified bytes array.
        /// </summary>
        /// <param name="bytes">The bytes array.</param>
        /// <returns>Deserialized instance of the <see cref="Telegram_A"/> class.</returns>
        public static Telegram_A Create(byte[] bytes) {
            if (string.IsNullOrEmpty(_telegramXsbtDefinition)) throw new System.NotSupportedException();
            System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
            doc.LoadXml(_headerXsbtDefinition);
            var typeMapping = new ProconTel.Mapping.TypeMapping(doc);
            var telegramHeader = ProconTel.Mapping.XsbtHeaderReader.ReadXml(_headerXsbtDefinition, typeMapping);
            var xsbtRegistry = new ProconTel.Mapping.BinaryXmlTranslator.XsbtRegistry(telegramHeader);
            xsbtRegistry.AddSchema(_telegramXsbtDefinition);
            var settings = ProconTel.Mapping.BinaryXmlTranslator.BinarySettings.Default;
            var translator = new ProconTel.Mapping.BinaryXmlTranslator.Translator(xsbtRegistry, typeMapping, new ProconTel.Mapping.BinaryXmlTranslator.BinaryBufferConverter { SwapBytes = settings.SwapBytes, InfinityValuesAccepted = settings.InfinityValuesAccepted }) { Settings = settings };
            Telegram_A telegram = new Telegram_A();
            translator.ConvertBufferToTelegramObject(translator.FindTelegramIdInBinaryData(bytes), telegram, bytes);
            return (Telegram_A)telegram;
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Telegram_A"/> class.
        /// Deserializes specified object.
        /// </summary>
        /// <param name="obj">The object.</param>
        /// <returns>Deserialized instance of the <see cref="Telegram_A"/> class.</returns>
        public static Telegram_A Create(object obj) {
            if(obj is string) return Create(obj.ToString());
            if(obj is byte[]) return Create((byte[])obj);
            return Create(obj.ToString());
        }
        
        /// <summary>
        /// Serializes this instance of the <see cref="Telegram_A"/> class and returns bytes array.
        /// </summary>
        /// <returns>Serialized instance of this <see cref="Telegram_A"/> class.</returns>
        public byte[] GetBytes() {
            if(string.IsNullOrEmpty(_telegramXsbtDefinition)) throw new System.NotSupportedException();
            System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
            doc.LoadXml(_headerXsbtDefinition);
            var typeMapping = new ProconTel.Mapping.TypeMapping(doc);
            var telegramHeader = ProconTel.Mapping.XsbtHeaderReader.ReadXml(_headerXsbtDefinition, typeMapping);
            var xsbtRegistry = new ProconTel.Mapping.BinaryXmlTranslator.XsbtRegistry(telegramHeader);
            var settings = ProconTel.Mapping.BinaryXmlTranslator.BinarySettings.Default;
            xsbtRegistry.AddSchema(_telegramXsbtDefinition);
            var translator = new ProconTel.Mapping.BinaryXmlTranslator.Translator(xsbtRegistry, typeMapping, new ProconTel.Mapping.BinaryXmlTranslator.BinaryBufferConverter { SwapBytes = settings.SwapBytes, InfinityValuesAccepted = settings.InfinityValuesAccepted }) { Settings = settings };
            return translator.ConvertTelegramObjectToBuffer(this);
        }
    }
}
